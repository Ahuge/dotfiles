#!/bin/bash
DEVELOPMENT_LIBRARIES="gcc gcc-c++ zlib zlib-devel libffi-devel openssl openssl-devel python-devel qt-devel qt qt-webkit-devel libxml2-devel libxslt-devel rpmdevtools python-pip";
echo "===============================";
read -r -p "Install dev utils? [y/N] " installDev
if [[ "$installDev" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
	echo -e "Installing development libraries\e[90m";
	yum -y install $DEVELOPMENT_LIBRARIES;
	echo -e "\e[37mInstalling development tools\e[90m";
	yum -y install cmake git htop;
	echo -e "\e[37m";
fi

read -r -p "Install Python3 to home directory? [y/N] " installPy3Home
if [[ "$installPy3Home" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
	echo -e "Installing development libraries\e[90m";
	yum -y install $DEVELOPMENT_LIBRARIES;
	mkdir /tmp;
	cd /tmp;
	echo -e "\e[37mDownloading Python3.7.2\e[90m";
	wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz;
	tar -xzf Python-3.7.2.tar.xz;
	cd Python-3.7.2;
	echo -e "\e[37mBuilding Python3\e[90m";
	./configure --prefix=$HOME --enable-optimizations;
	make;
	make test;
	make install;

	# Link libs
	ln -s /usr/lib64/libpython2.7.so.1.0 /usr/lib64/libpython2.7.so
	echo -e "\e[37m";
fi

read -r -p "Install PySide? [y/N] " installPySide
if [[ "$installPySide" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
	# Pyside
	echo -e "Installing PySide for Python2 (System)\e[90m";
	pip2 install pyside;
	if [[ "$installPy3Home" =~ ^([yY][eE][sS]|[yY])+$ ]]
	then
		echo -e "\e[37mInstalling PySide2 for Python3 (HomeDir)\e[90m";		
		pip3 install PySide2;
	fi
	echo -e "\e[37m";
fi

read -r -p "Install Powerline? [y/N] " installPowerline
if [[ "$installPowerline" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
	# install powerline
	if [[ "$installPy3Home" =~ ^([yY][eE][sS]|[yY])+$ ]]
	then
		pip3 install powerline-status;
		git clone git@github.com:powerline/fonts.git;
		cd fonts;
		./install.sh;
	else
		echo -e "\e[31mERROR: Powerline requires Python3 installed";
	fi

	echo -e "\e[37m";
fi

read -r -p "Install ShotgunToolkit? [y/N] " installSgTk
if [[ "$installSgTk" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
	# Install sgtk python
	echo "Install Shotgun Python api";
	pip2 install git+https://github.com/shotgunsoftware/python-api@v3.0.39;
	echo "Install Shotgun Tooklit";
	pip2 install git+https://github.com/shotgunsoftware/tk-core@v0.18.163;
	mkdir "/usr/lib/python2.7/hooks";
	touch /usr/lib/python2.7/hooks/bootstrap.py;
	cat > "/usr/lib/python2.7/hooks/bootstrap.py" << EOM

#!/usr/env python
import sgtk

class Bootstrap(sgtk.get_hook_baseclass()):
    def init(self, shotgun, pipeline_configuration_id, configuration_descriptor, **kwargs):
        """
        Initializes the hook.

        This method is called right after the bootstrap manager reads this hook and passes in
        information about the pipeline configuration that will be used.

        The default implementation copies the arguments into the attributes named ``shotgun``,
        ``pipeline_configuration_id`` and ``configuration_descriptor``.

        :param shotgun: Connection to the Shotgun site.
        :type shotgun: :class:`~shotgun_api3.Shotgun`

        :param int pipeline_configuration_id: Id of the pipeline configuration we're bootstrapping into.
            If None, the ToolkitManager is bootstrapping into the base configuration.

        :param configuration_descriptor: Configuration the manager is bootstrapping into.
        :type configuration_descriptor: :class:`~sgtk.descriptor.ConfigDescriptor`
        """
        self.shotgun = shotgun
        self.pipeline_configuration_id = pipeline_configuration_id
        self.configuration_descriptor = configuration_descriptor

EOM
s
fi


